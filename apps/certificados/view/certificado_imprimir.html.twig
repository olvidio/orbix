{{ oPosicion.mostrar_left_slide(1)|raw }}

{{ "Imprimir un certificado para"|trans|raw }}: {{ nombreApellidos }}
<br>
<br>
<form id='frm_upload' action="" method="post" enctype="multipart/form-data">
    {{ oHashCertificadoPdf.getCamposHtml()|raw }}
    <br>
    <label>
        {{ "Número de certificado"|trans|raw }}:
        <input type="text" name="certificado" value="{{ certificado }}"/>
    </label>
    <br>
    <label>
        {{ "Fecha del certificado"|trans|raw }}:
        <input type="text" id="f_certificado" name="f_certificado" value="{{ f_certificado }}"/>
    </label>
    <br>
    <label>
        {{ "idioma del certificado"|trans|raw }}:
        {{ oDesplIdiomas.desplegable|raw }}
        ({{ "blanco = latín"|trans|raw }})
    </label>
    <br>
    <label>
        {{ "Destino"|trans|raw }}:
        <input type="text" name="destino" value="{{ destino }}"/>
    </label>
    <br>
    <label>
        {{ "firmado digitalmente"|trans|raw }}:
        <input type="checkbox" name="firmado"/>
    </label>
    <br>
    <br>
    <input type="button" onclick="fnjs_Guardar_y_descargar();" value="{{ "Guardar y descargar pdf"|trans|raw }}">
</form>

<script>
    fnjs_Guardar_y_descargar = function () {
        if (!fnjs_comprobar_fecha('#f_certificado', '{{ locale_us }}')) {
            return;
        }

        if (typeof event !== 'undefined') {
            event.preventDefault();
        }

        let datos = $('#frm_upload').serialize();
        let request = $.ajax({
            data: datos,
            url: 'apps/certificados/controller/certificado_update.php',
            method: 'POST',
            dataType: 'json'
        });
        request.done(function (json) {
            if (json.success !== true) {
                alert("{{ "respuesta"|trans|raw }}: " + json.mensaje);
            } else {
                let item = json.item;
                let url = "{{ pag_certificado_2_pdf }}" + '?guardar=1&id_item=' + item + '{{ h|raw }}';
                open(url, "sele");
                // Una vez descargado, hay que permitir cancelar y borrar si no está correcto
                let msg = "{{ "¿Es correcto?"|trans|raw }}";
                msg += "\n";
                msg += "\n";
                msg += "{{ "'Cancel' para eliminar el certificado recién creado"|trans|raw }}\n";
                msg += "\n";
                // el confirm normal no funciona con el Chrome, Si hace referencia a otra ventana o iframe,
                // devuelve false siempre!
                let isChromeAgent = false;
                if (navigator.userAgent.includes("Chrome")) {
                    isChromeAgent = true;
                }
                if (isChromeAgent) {
                    // ok
                    {{ oPosicion.js_atras(1)|raw }}
                } else {
                    if (confirm(msg)) {
                        // ok
                        {{ oPosicion.js_atras(1)|raw }}
                    } else {
                        // cancel
                        let url2 = "{{ pag_certificado_eliminar }}" + '?id_item=' + item + '{{ h_eliminar|raw }}';
                        fnjs_update_div('#main', url2);
                        {{ oPosicion.js_atras(1)|raw }}
                    }
                }
            }
        });
    }


    $(function () {
        $("#f_certificado").datepicker({
            numberOfMonths: 1,
            showButtonPanel: true
        });

    });
</script>